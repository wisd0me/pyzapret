#!env python3

import sys
import argparse

def process(args):
    '''
    File format is follow:
    2016-03-18;http://24-dd.biz/;24-dd.biz;104.27.157.27,104.27.156.27
    2016-03-17;;litmir.co;104.24.117.214,107.154.114.57,104.24.116.214
    2016-02-16;;;148.251.140.113,148.251.140.114,148.251.140.123,148.251.140.112
    and so on.
    '''
    def expand_ips(addrs):
        ''' Expands records blocked by IP into ip addr per line '''
        str=''
        ips = addrs.split(',')
        while len(ips) > 1:
            str += ips.pop(0) + '\n'
        else:
            # since it's the last field in the original list, we don't need to add '\n'
            str += ips.pop(0)
        return str

    with open(args.input, mode='r', encoding=args.encoding, errors='replace') as input, \
         open(args.urls, mode='w', encoding=args.encoding) as urls, \
         open(args.domains, mode='w', encoding=args.encoding) as domains:
        prev = ''
        for line in input:
            tokens = line.split(';')
            outfile = urls
            is_domain = False
            i = 1
            if not tokens[1]:
                outfile = domains
                is_domain = True
                i = 2
            if tokens[i] == prev:
                continue
            prev = tokens[i]

            record = expand_ips(tokens[3]) if is_domain and not tokens[i] \
                     else tokens[i] + '\n'
            outfile.write(record)

argp = argparse.ArgumentParser(description='converts antizapret.info csv file \
                               into url & domain lists')
argp.add_argument('-i', '--input', dest='input', required=True, help='input file')
argp.add_argument('-u', '--urls', dest='urls',
                  help='url list output file, ".urls" suffix is added by default \
                  to the input file name')
argp.add_argument('-d', '--domains', dest='domains',
                  help='domain list output file, ".domains" suffix is added by default \
                  to the input file name')
argp.add_argument('-e', '--encoding', dest='encoding', default='utf8',
                  help='file encoding; by default, utf8 is used')

args = argp.parse_args()

if not args.urls:
    args.urls = args.input + '.urls'

if not args.domains:
    args.domains = args.input + '.domains'

process(args)
